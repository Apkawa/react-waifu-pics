{"version":3,"sources":["recoil/api/atoms.ts","recoil/api/effects.ts","recoil/api/selectors.ts","Waifu/WaifuPicture.tsx","recoil/api/hooks.ts","recoil/api/constants.ts","Waifu/FilterOptions.tsx","Waifu/Waifu.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["key","filterOptions","atom","default","type","category","effects_UNSTABLE","setSelf","onSet","savedValue","localStorage","getItem","JSON","parse","newValue","DefaultValue","removeItem","setItem","stringify","requestRefresh","waifuPicture","selector","get","a","fetch","response","json","data","WaifuPicture","props","pic","useRecoilValue","refresh","setRefreshPicture","useSetRecoilState","requestID","useRefreshPicture","Suspense","fallback","onClick","style","height","cursor","src","url","alt","CATEGORIES","sfw","nsfw","FilterOptions","fOpts","setFilterOpts","value","onChange","e","newFilterOpts","onSelectType","target","map","c","Waifu","WaifuContainer","className","display","flexDirection","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30bc82cd.chunk.js","sourcesContent":["import {atom} from \"recoil\";\nimport {NSFW_CATEGORIES_TYPE, SFW_CATEGORIES_TYPE} from \"./constants\";\nimport {localStorageEffect} from \"./effects\";\n\nexport interface WaifuPicture {\n  url: string\n}\n\nexport type FilterOptionsType = { type: \"sfw\", category: SFW_CATEGORIES_TYPE }\n  | { type: 'nsfw', category: NSFW_CATEGORIES_TYPE }\n\n\nexport const filterOptions = atom<FilterOptionsType>({\n  key: 'filterOptions',\n  default: {type: \"sfw\", category: \"waifu\"},\n  effects_UNSTABLE: [\n    localStorageEffect('filter_options')\n  ]\n})\n\n\nexport const requestRefresh = atom<number>({\n  key: 'requestRefresh',\n  default: 0\n})\n","import {AtomEffect, DefaultValue} from \"recoil\";\n\nexport function localStorageEffect<T>(key: string) {\n  const _Effect: AtomEffect<T> = ({setSelf, onSet}) => {\n    const savedValue = localStorage.getItem(key)\n    if (savedValue != null) {\n      setSelf(JSON.parse(savedValue));\n    }\n\n    onSet(newValue => {\n      if (newValue instanceof DefaultValue) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, JSON.stringify(newValue));\n      }\n    });\n  };\n  return _Effect\n}\n","import {selector} from \"recoil\";\nimport {filterOptions, requestRefresh, WaifuPicture} from \"./atoms\";\n\nconst ENDPOINT = 'https://api.waifu.pics/'\n\nexport const waifuPicture = selector<WaifuPicture>({\n  key: 'waifuPicture',\n  get: async ({get}) => {\n    get(requestRefresh)\n    const {type, category} = get(filterOptions)\n    const response = await fetch(`${ENDPOINT}/${type}/${category}`)\n    const data = await response.json() as WaifuPicture\n    return data\n  }\n})\n","import React from \"react\";\nimport {useRecoilValue} from \"recoil\";\nimport {waifuPicture} from \"../recoil/api/selectors\";\nimport {useRefreshPicture} from \"../recoil/api/hooks\";\n\ninterface WaifuPictureProps {\n}\n\nexport function WaifuPicture(props: WaifuPictureProps) {\n  const pic = useRecoilValue(waifuPicture)\n  const refresh = useRefreshPicture()\n  const onClickHandler = () => {\n    refresh()\n  }\n  return (\n    <>\n      <div>\n        <React.Suspense fallback={<div>Loading</div>}>\n          <img onClick={onClickHandler}\n               style={{height: '80vh', cursor: \"pointer\"}}\n               src={pic.url}\n               alt=\" \"/>\n        </React.Suspense>\n      </div>\n    </>\n  )\n}\n","import {useSetRecoilState} from \"recoil\";\nimport {requestRefresh} from \"./atoms\";\n\nexport function useRefreshPicture() {\n  const setRefreshPicture = useSetRecoilState(requestRefresh);\n  return () => {\n    setRefreshPicture(requestID => requestID + 1);\n  };\n}\n","export const SFW_CATEGORIES = ['waifu',\n  'neko',\n  'shinobu',\n  'megumin',\n  'bully',\n  'cuddle',\n  'cry',\n  'hug',\n  'awoo',\n  'kiss',\n  'lick',\n  'pat',\n  'smug',\n  'bonk',\n  'yeet',\n  'blush',\n  'smile',\n  'wave',\n  'highfive',\n  'handhold',\n  'nom',\n  'bite',\n  'glomp',\n  'slap',\n  'kill',\n  'kick',\n  'happy',\n  'wink',\n  'poke',\n  'dance',\n  'cringe'] as const\nexport type SFW_CATEGORIES_TYPE = typeof SFW_CATEGORIES[number]\n\nexport const NSFW_CATEGORIES = ['waifu', 'neko', 'trap', 'blowjob'] as const\nexport type NSFW_CATEGORIES_TYPE = typeof NSFW_CATEGORIES[number]\n\nexport const CATEGORIES = {\n  sfw: SFW_CATEGORIES,\n  nsfw: NSFW_CATEGORIES\n}\n\nexport type CATEGORY_TYPES = keyof typeof CATEGORIES\n","import React from \"react\";\nimport {useRecoilValue, useSetRecoilState} from \"recoil\";\nimport {filterOptions} from \"../recoil/api/atoms\";\nimport {CATEGORIES, CATEGORY_TYPES} from \"../recoil/api/constants\";\n\ninterface FilterOptionsProps {\n}\n\nexport function FilterOptions(props: FilterOptionsProps) {\n  const fOpts = useRecoilValue(filterOptions)\n  const setFilterOpts = useSetRecoilState(filterOptions)\n  function onSelectType (type: CATEGORY_TYPES) {\n    const newFilterOpts = {type, category: CATEGORIES[type][0]}\n    setFilterOpts(newFilterOpts)\n  }\n  return (\n    <>\n      <div>\n        <select value={fOpts.type} onChange={e => onSelectType(e.target.value as CATEGORY_TYPES)}>\n          <option value={'sfw'}>sfw</option>\n          <option value={'nsfw'}>nsfw</option>\n        </select>\n        <select value={fOpts.category} onChange={e => setFilterOpts({\n          ...fOpts, category: e.target.value as any\n        })}>\n          {CATEGORIES[fOpts.type].map(c => <option value={c}>{c}</option>)}\n        </select>\n      </div>\n    </>\n  )\n}\n","import React from 'react';\nimport {WaifuPicture} from \"./WaifuPicture\";\nimport {FilterOptions} from \"./FilterOptions\";\n\nfunction Waifu() {\n  return (\n    <>\n      <FilterOptions/>\n      <React.Suspense fallback={<div>Loading...</div>}>\n        <WaifuPicture/>\n      </React.Suspense>\n    </>\n  )\n}\n\nexport default function WaifuContainer() {\n  return (\n    <div className=\"App\" style={{display: 'flex', flexDirection: 'column'}}>\n      <div>Your waifu</div>\n      <Waifu/>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport './App.css';\nimport Waifu from \"./Waifu/Waifu\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Waifu/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {RecoilRoot} from \"recoil\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n        <App/>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}